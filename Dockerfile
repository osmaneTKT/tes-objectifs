# === üöÄ STAGE 1 : BUILD STAGE ===
FROM node:20.14.0-alpine AS builder

# D√©finition du r√©pertoire de travail
WORKDIR /app

# Copier uniquement package.json et package-lock.json pour optimiser le cache Docker
COPY package*.json ./

# Installer les d√©pendances en mode production
RUN npm install --only=production

# Copier le reste de l‚Äôapplication (en excluant certains fichiers avec `.dockerignore`)
COPY . .

# V√©rifier que les fichiers ont bien √©t√© copi√©s
RUN ls -la /app

# === üöÄ STAGE 2 : RUN STAGE ===
FROM node:20.14.0-alpine

# üõ°Ô∏è Cr√©ation d'un utilisateur s√©curis√© non-root
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# D√©finition du r√©pertoire de travail
WORKDIR /app

# Copier uniquement les fichiers n√©cessaires depuis le build stage
COPY --from=builder /app /app

# Changer les permissions pour l'utilisateur s√©curis√©
RUN chown -R appuser:appgroup /app

# Ex√©cuter l'application en tant qu'utilisateur non-root
USER appuser

# Exposer le port sur lequel l'application √©coute
EXPOSE 3000

# D√©marrer l‚Äôapplication avec npm
CMD ["npm", "start"]
